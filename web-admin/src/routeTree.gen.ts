/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedItemsIndexRouteImport } from './routes/_authenticated/items/index'
import { Route as AuthenticatedCashflowIndexRouteImport } from './routes/_authenticated/cashflow/index'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedItemsIndexRoute = AuthenticatedItemsIndexRouteImport.update({
  id: '/items/',
  path: '/items/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedCashflowIndexRoute =
  AuthenticatedCashflowIndexRouteImport.update({
    id: '/cashflow/',
    path: '/cashflow/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedIndexRoute
  '/cashflow': typeof AuthenticatedCashflowIndexRoute
  '/items': typeof AuthenticatedItemsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/cashflow': typeof AuthenticatedCashflowIndexRoute
  '/items': typeof AuthenticatedItemsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/cashflow/': typeof AuthenticatedCashflowIndexRoute
  '/_authenticated/items/': typeof AuthenticatedItemsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cashflow' | '/items'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cashflow' | '/items'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/'
    | '/_authenticated/cashflow/'
    | '/_authenticated/items/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/items/': {
      id: '/_authenticated/items/'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof AuthenticatedItemsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/cashflow/': {
      id: '/_authenticated/cashflow/'
      path: '/cashflow'
      fullPath: '/cashflow'
      preLoaderRoute: typeof AuthenticatedCashflowIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedCashflowIndexRoute: typeof AuthenticatedCashflowIndexRoute
  AuthenticatedItemsIndexRoute: typeof AuthenticatedItemsIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedCashflowIndexRoute: AuthenticatedCashflowIndexRoute,
  AuthenticatedItemsIndexRoute: AuthenticatedItemsIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
